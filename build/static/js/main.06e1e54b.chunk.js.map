{"version":3,"sources":["static/avatar.png","pages/leftNav/index.js","pages/components/breadcrumb.js","util/request.js","pages/rightContent/subpages/articleList/index.js","pages/rightContent/subpages/addArticle/index.js","pages/rightContent/subpages/edit/index.js","pages/rightContent/subpages/tagList/index.js","pages/rightContent/subpages/addTag/index.js","pages/rightContent/subpages/borad/index.js","pages/rightContent/index.js","pages/components/login.js","App.js","serviceWorker.js","store/reducer/commonReducer.js","store/reducer/index.js","store/ActionType.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Sider","SubMenu","map","Map","set","LeftNav","_this","this","props","history","listen","route","console","log","dispatch","updateStateAction","pathname","_this2","key","location","optKey","startsWith","toLocaleLowerCase","includes","react_default","a","createElement","className","collapsible","collapsed","onCollapse","type","onCollapsedHandler","alt","src","require","menu","theme","mode","defaultOpenKeys","defaultSelectedKeys","get","selectedKeys","title","icon","Item","react_router_dom","to","React","Component","withRouter","connect","state","path","common","payload","createBreadCrumb","breadcrumb","style","margin","pathList","i","PATHS","article","getAllarticles","getOnearticle","getArticleByPagination","getArticleByPaginationWithTag","deleteArticle","upadteArticle","insertPost","tag","getAlltags","deleteTag","renameTag","insertTag","comment","insertLeaveMessage","getLeaveMessageList","user","verify","fetchFn","params","arguments","length","undefined","headerParams","headers","Headers","Content-Type","Authorization","document","cookie","match","Object","assign","method","body","JSON","stringify","fetch","then","res","json","data","hasError","msg","catch","alert","request","bind","post","Content","getLocalTime","nS","test","RegExp","$1","replace","confirm","modal","articleList","articleData","articleCount","columns","dataIndex","render","href","date","tags","es_tag","color","id","tagName","text","record","concat","divider","onClick","showConfirm","breadcrumb_createBreadCrumb","padding","backgroundColor","minHeight","table","dataSource","pagination","pageSize","total","onChange","updatePage","getArticles","setState","datacount","postList","item","_this3","current","count","pageIndex","self","content","onCancel","onOk","Promise","resolve","reject","postId","message","success","error","addArticle","tagList","descript","defaultValue","md","value","onEdit","onInput","e","prefix","defineProperty","target","submit","_this$state$post","assertThisInitialized","filter","join","push","getTagList","addArticle_Content","es_form","input","placeholder","es_checkbox","Group","width","col","span","marginBottom","dist_default","textAlign","es_button","Edit","all","getPostById","_ref","_ref2","slicedToArray","res1","edit_Content","tagData","saveName","editState","allowClear","Save","Cancel","tagList_Content","tagId","addTag","newTagName","addTag_Content","Borad","commentList","getCommentList","borad_Content","list","header","itemLayout","renderItem","actions","author","name","avatar","datetime","Date","created_at","toLocaleString","Header","Footer","RightContent","toggle","layout","react_router","exact","component","edit","borad","Login","handleSubmit","preventDefault","form","validateFields","err","values","username","password","expiresDate","toGMTString","token","TouristMode","getTime","getFieldDecorator","onSubmit","rules","required","valuePropName","initialValue","float","htmlType","loginFlag","App","WrappedNormalLoginForm","isLogin","create","pages_leftNav","pages_rightContent","overflow","Boolean","window","hostname","initialState","combineReducers","action","objectSpread","store","createStore","rootReducer","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06e1e54b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.a8ab34e3.png\";","import React from 'react'\nimport './leftNav.scss'\nimport { Layout, Icon, Menu } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\n// 存储侧边栏信息\nlet map = new Map()\nmap.set('/', 'article-list')\nmap.set('/addArticle', 'article-add')\nmap.set('/tagList', 'tag-list')\nmap.set('/addTag', 'tag-add')\nmap.set('/borad', 'borad')\nmap.set('/edit', 'article-list')\n\nclass LeftNav extends React.Component {\n  componentWillMount () {\n    // 路由监听\n    this.props.history.listen(route => {\n      console.log(this.props.dispatch, route, '---------')\n      // redux状态管理\n      this.props.updateStateAction(route.pathname)\n    })\n  }\n  \n  render () {\n    // let key = this.props.path\n    let key = this.props.location.pathname\n    key = key.startsWith('/edit') ? '/edit' : key\n    let optKey = 'sub-article'\n    if (key.toLocaleLowerCase().includes('tag')) {\n      optKey = 'sub-tag'\n    } else if (key.toLocaleLowerCase().includes('borad')) {\n      optKey = 'sub-borad'\n    }\n\n    return (\n      <Sider\n        className=\"left-nav\"\n        collapsible\n        collapsed={this.props.collapsed}\n        onCollapse={(collapsed, type) => this.props.onCollapsedHandler()}\n      >\n      <div className=\"left-nav-avatar\">\n        <img alt=\"avatar\" src={require('../../static/avatar.png')}/>\n      </div>\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultOpenKeys={[optKey]}\n          defaultSelectedKeys={[map.get(key)]}\n          selectedKeys={[map.get(key || '/')]}\n        >\n          <SubMenu key=\"sub-article\" title={<span><Icon type=\"ordered-list\" />{!this.props.collapsed ? '文章管理' : ''}</span>}>\n            <Menu.Item key=\"article-list\">\n              <Link to=\"/\">\n                <span>文章列表</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"article-add\">\n              <Link to=\"/addArticle\">\n                <span>添加文章</span>\n              </Link>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub-tag\" title={<span><Icon type=\"tags\" />{!this.props.collapsed ? '标签管理' : ''}</span>}>\n            <Menu.Item key=\"tag-list\">\n              <Link to=\"/tagList\">\n                <span>全部标签</span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"tag-add\">\n              <Link to=\"/addTag\">\n                <span>新增标签</span>\n              </Link>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub-borad\" title={<span><Icon type=\"message\" />{!this.props.collapsed ? '留言墙管理' : ''}</span>}>\n            <Menu.Item key=\"borad\">\n              <Link to=\"/borad\">\n                <span>留言墙</span>\n              </Link>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nconst mapStateToProps = state => function () {\n  return ({\n    path: state.common.path\n  })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateStateAction: payload => dispatch({ type: 'update', payload })\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeftNav))\n","import React from 'react'\nimport { Breadcrumb } from 'antd'\n\nexport default class createBreadCrumb extends React.Component {\n  render () {\n    return (\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        {this.props.pathList.map((path, i) => {\n          return (\n            <Breadcrumb.Item key={i}>{path}</Breadcrumb.Item>\n          )\n        })}\n      </Breadcrumb>\n    )\n  }\n}","export const PATHS = {\n  article: {\n    getAllarticles: '/post/list',\n    getOnearticle: '/post/onepost',\n    getArticleByPagination: '/post/pagination',\n    getArticleByPaginationWithTag: '/post/pagination/withtag',\n    deleteArticle: '/post/deleteArticle',\n    upadteArticle: '/post/updateArticle',\n    insertPost: '/post/insert'\n  },\n  tag: {\n    getAlltags: '/tag/list',\n    deleteTag: '/tag/delete',\n    renameTag: '/tag/rename',\n    insertTag: '/tag/insert'\n  },\n  comment: {\n    insertLeaveMessage: '/comment/insertComment',\n    getLeaveMessageList: '/comment/getleaveComment'\n  },\n  user: {\n    verify: '/user/verify'\n  }\n}\n\n/**\n * 公有请求方法\n * @param {*} path url地址\n * @param {*} params 请求参数\n */\nlet fetchFn = function (path, params = {}, headerParams = { \n  // fetch请求传输json数据时，务必带上content-type: 'application/json'\n  headers: new Headers({\n    'Content-Type': 'application/json',\n    'Authorization': document.cookie.match(/_ytcblog_token_=(.*)(;?)/) ? document.cookie.match(/_ytcblog_token_=(.*)(;?)/)[1] : ''\n  })\n }) {\n  path = '/api' + path\n  params = Object.assign(headerParams, {\n    method: this.method,\n    mode: 'cors'\n  }, this.method === 'POST' ? {body: JSON.stringify(params)} : {})\n  return fetch(path, params)\n  .then(res => res.json())\n  .then(data => {\n    console.log(data, !data.hasError)\n    if (data && !data.hasError) {\n      return data\n    } else {\n      throw JSON.stringify(data.msg || '接口异常')\n    }\n  })\n  .catch(alert)\n}\n\nexport const request = {\n  get: fetchFn.bind({ method: 'GET' }),\n  post: fetchFn.bind({ method: 'POST' })\n}\n","// 添加文章列表页\nimport React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Layout, Table, Tag, Divider, Modal, message } from 'antd'\nimport { request, PATHS } from '../../../../util/request'\nimport { Link } from 'react-router-dom'\n\nlet { Content } = Layout\nlet getLocalTime = function (nS) {\n  if (/(.*)T(.*)/.test(nS)) return RegExp.$1.replace(/-/g, '.')\n}\nlet confirm = Modal.confirm\n\nclass articleList extends React.Component {\n  state = {\n    articleData: [],\n    articleCount: 0,\n    columns: [{\n      title: '标题',\n      dataIndex: 'title',\n      render: title => <a href={'javascript:'}>{title}</a> // eslint-disable-line\n    }, {\n      title: '日期',\n      dataIndex: 'created_at',\n      render: date => <a href={'javascript:'}>{getLocalTime(date).replace(/\\./g, '-')}</a> // eslint-disable-line\n    }, {\n      title: '标签',\n      dataIndex: 'tags',\n      render: tags => (\n        <span>\n          {tags.map(tag => {\n            let color = 'geekblue'\n            return <Tag color={color} key={tag.id}>{tag.tagName}</Tag>;\n          })}\n        </span>\n      ),\n    }, {\n      title: '编辑',\n      render: (text, record) => (\n        <span>\n          <a href={`http://chentianyuan.xyz/article/${record.id}`}>查看</a>\n          <Divider type=\"vertical\" />\n          <Link to={`/edit/${record.id}`}>修改</Link>\n          <Divider type=\"vertical\" />\n          <a href={'javascript:'} onClick={() => this.showConfirm(record)}>删除</a> {/*eslint-disable-line*/}\n        </span>\n      )\n    }]\n  }\n  componentWillMount () {\n    // 组件挂载之前，此处获取异步数据setState不会触发重渲染\n  }\n  render () {\n    // 首次\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n        <Breadcrumb pathList={['Article', 'List']}></Breadcrumb>\n        <div style={{padding: 24, backgroundColor: '#fff', minHeight: 360}}>\n          <Table columns={this.state.columns} dataSource={this.state.articleData} pagination={{pageSize: 8, total: this.state.articleCount}} onChange={this.updatePage.bind(this)}/>\n        </div>\n      </Content>\n    )\n  }\n  componentDidMount () {\n    this.getArticles().then(res => {\n      this.setState({\n        articleCount: res.datacount,\n        articleData: res ? res.data.postList.map((item, key) => Object.assign(item, { key })) : []\n      })\n    })\n  }\n  updatePage (pagination) {\n    this.getArticles(pagination.current).then(res => {\n      this.setState({\n        articleCount: res.data.count,\n        articleData: res ? res.postList.data.map((item, key) => Object.assign(item, { key })) : []\n      })\n    })\n  }\n  getArticles (pageIndex = 1) {\n    // 获取异步数据\n    return request.post(PATHS.article.getArticleByPagination, {\n      pageIndex,\n      pageSize: 8\n    })\n  }\n  showConfirm (post) {\n    let self = this\n    confirm({\n      title: 'Delete',\n      content: `确认删除文章 ${post.title} 吗`,\n      onCancel () {},\n      onOk () {\n        return new Promise((resolve, reject) => {\n          request.post(PATHS.article.deleteArticle, {\n            postId: post.id\n          }).then(res => {\n            if (res && !res.hasError) {\n              message.success('删除成功')\n              self.getArticles().then(res => {\n                self.setState({\n                  articleData: res.data.postList.map((item, key) => Object.assign(item, {key}))\n                })\n                resolve()\n              })\n            } else {\n              reject()\n              message.error('删除失败')\n            }\n          })\n        }).catch(console.log)\n      }\n    })\n  }\n}\n\nexport default articleList\n","import React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Layout, Form, Input, Checkbox, Col, Button, message, Modal } from 'antd'\nimport { request, PATHS } from '../../../../util/request'\nimport Editor from 'for-editor'\nimport { connect } from 'react-redux'\n\nconst { Content } = Layout\nconst confirm = Modal.confirm\nclass addArticle extends React.Component {\n  componentDidMount () {\n    this.getTagList().then(res => {\n      this.setState({\n        tagList: res.data\n      })\n    })\n  }\n\n  async getTagList () {\n    return await request.get(PATHS.tag.getAlltags)\n  }\n\n  state = {\n    tagList: [],\n    post: {\n      title: '',\n      descript: ''\n    },\n    defaultValue: [],\n    md: ''\n  }\n\n  onChange = value => {\n    this.setState({\n      defaultValue: value\n    })\n  }\n\n  onEdit = value => {\n    this.setState({\n      md: value\n    })\n  }\n\n  onInput = (e, prefix) => {\n    let post = Object.assign(this.state.post, {\n      [prefix]: e.target.value\n    })\n    this.setState({\n      post\n    })\n  }\n\n  submit = () => {\n    // 这三只从post拿\n    let { title, descript } = this.state.post\n    let defaultValue = this.state.defaultValue\n    let self = this\n    let tags = this.state.tagList.filter(tag => defaultValue.includes(tag.id)).map(tag => tag.tagName).join(',')\n    confirm({\n      title: 'Add',\n      content: `确认新增文章吗`,\n      onCancel () {},\n      onOk () {\n        return new Promise((resolve, reject) => {\n          request.post(PATHS.article.insertPost, {\n            title,\n            descript,\n            content: self.state.md,\n            tags\n          }).then(res => {\n            if (res && !res.hasError) {\n              resolve()\n              message.success('新增成功')\n              self.props.updateStateAction('/addArticle')\n              self.props.history.push('/')\n            } else {\n              reject()\n              message.error('新增失败')\n            }\n          })\n        }).catch(console.log)\n      }\n    })\n  }\n\n  render () {\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n      <Breadcrumb pathList={['Article', 'AddArticle']}></Breadcrumb>\n      <div style={{padding: 24, backgroundColor: '#fff', minHeight: 360}}>\n        <Form>\n          <Form.Item>\n            <Input placeholder=\"article title\" value={this.state.post.title} onChange={e => this.onInput(e, 'title')}/>\n          </Form.Item>\n          <Form.Item>\n            <Input placeholder=\"article description\" value={this.state.post.descript} onChange={e => this.onInput(e, 'descript')}/>\n          </Form.Item>\n          <Form.Item>\n            <Checkbox.Group\n            value={this.state.defaultValue}\n            onChange={value => this.onChange(value)}\n            style={{width: '100%'}}\n            >\n              {\n                this.state.tagList.map((tag, key) => {\n                  return (\n                    <Col span={8} key={key} style={{marginBottom: '15px'}}>\n                      <Checkbox value={tag.id}>\n                        {tag.tagName}\n                      </Checkbox>\n                    </Col>\n                  )\n                })\n              }\n            </Checkbox.Group>\n          </Form.Item>\n          <Editor value={this.state.md} onChange={e => this.onEdit(e)}/>\n          <Form.Item style={{textAlign: 'right'}}>\n            <Button type=\"primary\" onClick={() => this.submit()}>提交</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </Content>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  path: state.path\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateStateAction: payload => dispatch({ type: 'update', payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(addArticle)","import React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Layout, Form, Input, Checkbox, Col, Button, message, Modal } from 'antd'\nimport { request, PATHS } from '../../../../util/request'\nimport Editor from 'for-editor'\n\nconst { Content } = Layout\nconst confirm = Modal.confirm\nclass Edit extends React.Component {\n  componentDidMount () {\n    let { postId } = this.props.match.params\n    Promise.all([\n      this.getTagList(),\n      this.getPostById(postId)\n    ]).then(([res1, res2]) => {\n      let post = res2.data\n      this.setState({\n        tagList: res1.data,\n        post,\n        defaultValue: post.tags ? post.tags.map(tag => tag.id) : [],\n        md: post.content\n      })\n    })\n  }\n\n  async getTagList () {\n    return await request.get(PATHS.tag.getAlltags)\n  }\n\n  async getPostById (postId) {\n    return await request.post(PATHS.article.getOnearticle, { postId })\n  }\n\n  state = {\n    tagList: [],\n    post: {\n      title: '',\n      descript: ''\n    },\n    defaultValue: [],\n    md: ''\n  }\n\n  onChange = value => {\n    this.setState({\n      defaultValue: value\n    })\n  }\n\n  onEdit = value => {\n    this.setState({\n      md: value\n    })\n  }\n\n  onInput = (e, prefix) => {\n    let post = Object.assign(this.state.post, {\n      [prefix]: e.target.value\n    })\n    this.setState({\n      post\n    })\n  }\n\n  submit = () => {\n    // 这三只从post拿\n    let { id, title, descript } = this.state.post\n    let defaultValue = this.state.defaultValue\n    let self = this\n    let tags = this.state.tagList.filter(tag => defaultValue.includes(tag.id)).map(tag => tag.tagName).join(',')\n    confirm({\n      title: 'Update',\n      content: `确认更新文章吗`,\n      onCancel () {},\n      onOk () {\n        return new Promise((resolve, reject) => {\n          request.post(PATHS.article.upadteArticle, {\n            postId: id,\n            title,\n            descript,\n            content: self.state.md,\n            tags\n          }).then(res => {\n            if (res && !res.hasError) {\n              resolve()\n              message.success('更新成功')\n              self.props.history.push('/')\n            } else {\n              reject()\n              message.error('更新失败')\n            }\n          })\n        }).catch(console.log)\n      }\n    })\n  }\n\n  render () {\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n      <Breadcrumb pathList={['Article', 'Edit']}></Breadcrumb>\n      <div style={{padding: 24, backgroundColor: '#fff', minHeight: 360}}>\n        <Form>\n          <Form.Item>\n            <Input placeholder=\"article title\" value={this.state.post.title} onChange={e => this.onInput(e, 'title')}/>\n          </Form.Item>\n          <Form.Item>\n            <Input placeholder=\"article description\" value={this.state.post.descript} onChange={e => this.onInput(e, 'descript')}/>\n          </Form.Item>\n          <Form.Item>\n            <Checkbox.Group\n            value={this.state.defaultValue}\n            onChange={value => this.onChange(value)}\n            style={{width: '100%'}}\n            >\n              {\n                this.state.tagList.map((tag, key) => {\n                  return (\n                    <Col span={8} key={key} style={{marginBottom: '15px'}}>\n                      <Checkbox value={tag.id}>\n                        {tag.tagName}\n                      </Checkbox>\n                    </Col>\n                  )\n                })\n              }\n            </Checkbox.Group>\n          </Form.Item>\n          <Editor value={this.state.md} onChange={e => this.onEdit(e)}/>\n          <Form.Item style={{textAlign: 'right'}}>\n            <Button type=\"primary\" onClick={() => this.submit()}>提交</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </Content>\n    )\n  }\n}\n\nexport default Edit","import React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Divider, Table, Layout, message, Modal, Input } from 'antd'\n// import { Link } from 'react-router-dom'\nimport { PATHS, request } from '../../../../util/request'\n\nlet { Content } = Layout\nlet confirm = Modal.confirm\nclass tagList extends React.Component {\n  state = {\n    tagData: [],\n    saveName: '',\n    columns: [{\n      title: '标签名',\n      dataIndex: 'tagName',\n      render: (text, record) => (\n      !record.editState ? <a href={'javascript:'}>{record.tagName}</a> : <Input allowClear={true} value={this.state.saveName} style={{width: '100%'}} placeholder=\"请输入标签名称\" onInput={this.onInput.bind(this, record)}/> // eslint-disable-line\n      )\n    }, {\n      title: '相关文章数量',\n      dataIndex: 'count',\n      render: (text, record) => (<a href={'javascript:'}>{record.count}篇文章</a>) // eslint-disable-line\n    }, {\n      title: '功能',\n      render: (text, record) => (\n        <span>\n          {\n            !record.editState ? <a onClick={this.Edit.bind(this, record)} to={'javascript:'}>编辑</a> : <a onClick={this.Save.bind(this, record)} to={'javascript:'}>保存</a> // eslint-disable-line\n          }\n          <Divider type=\"vertical\" />\n          {\n            !record.editState ? <a href={'javascript:'} onClick={this.showConfirm.bind(this, record)}>删除</a> : <a href={'javascript:'} onClick={this.Cancel.bind(this, record)}>取消</a> // eslint-disable-line\n          }\n        </span>\n      )\n    }]\n  }\n  componentDidMount () {\n    this.getTagList().then(res => {\n      this.setState({\n        tagData: res.data.map((item, key) => Object.assign(item, {\n          key,\n          editState: false\n        }))\n      })\n    })\n  }\n  getTagList () {\n    // 获取异步数据\n    return request.get(PATHS.tag.getAlltags)\n  }\n  Edit (record) {\n    this.setState({\n      tagData: this.state.tagData.map(tag => {\n        if (tag.id === record.id) {\n          tag.editState = true\n        }\n        return tag\n      }),\n      saveName: record.tagName\n    })\n  }\n  onInput (record, e) {\n    this.setState({\n      saveName: e.target.value\n    })\n  }\n  Save (record) {\n    request.post(PATHS.tag.renameTag, {\n      tagName: this.state.saveName,\n      id: record.id\n    }).then(res => {\n      if (res) {\n        message.success('修改成功')\n        this.setState({\n          tagData: this.state.tagData.map(tag => {\n            if (tag.id === record.id) {\n              tag.editState = false\n              tag.tagName = this.state.saveName\n            }\n            return tag\n          }),\n          saveName: ''\n        })\n      } else {\n        message.error('修改失败')\n      }\n    })\n  }\n  Cancel (record) {\n    this.setState({\n      tagData: this.state.tagData.map(tag => {\n        if (tag.id === record.id) {\n          tag.editState = false\n        }\n        return tag\n      })\n    })\n  }\n  render () {\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n        <Breadcrumb pathList={['Tag', 'List']}></Breadcrumb>\n        <div style={{padding: 24, backgroundColor: '#fff', minHeight: 360}}>\n          <Table columns={this.state.columns} dataSource={this.state.tagData} pagination={{pageSize: 4, total: this.state.tagData.length}}/>\n        </div>\n      </Content>\n    )\n  }\n  showConfirm (tag) {\n    let self = this\n    confirm({\n      title: 'Delete',\n      content: `确认删除标签 ${tag.tagName} 吗`,\n      onCancel () {},\n      onOk () {\n        return new Promise((resolve, reject) => {\n          request.post(PATHS.tag.deleteTag, {\n            tagId: tag.id\n          }).then(res => {\n            if (res && !res.hasError) {\n              message.success('删除成功')\n              self.getTagList().then(res => {\n                self.setState({\n                  tagData: res.data.map((item, key) => Object.assign(item, {key}))\n                })\n                resolve()\n              })\n            } else {\n              reject()\n              message.error('删除失败')\n            }\n          })\n        }).catch(console.log)\n      }\n    })\n  }\n}\n\nexport default tagList\n","import React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Layout, Input, Button, message, Form } from 'antd'\nimport { PATHS, request } from '../../../../util/request';\n\nconst { Content } = Layout\nclass addTag extends React.Component {\n  state = {\n    newTagName: ''\n  }\n  render () {\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n        <Breadcrumb pathList={['Tag', 'Add']}></Breadcrumb>\n        <div style={{padding: 24, backgroundColor: '#fff'}}>\n          <Form>\n            <Form.Item>\n              <Input placeholder=\"新增文章标签\" value={this.state.newTagName} onChange={this.onChange.bind(this)}/>\n            </Form.Item>\n          </Form>\n          <Button type=\"primary\" onClick={() => this.submit()}>提交</Button>\n        </div>\n      </Content>\n    )\n  }\n  onChange (e) {\n    this.setState({\n      newTagName: e.target.value\n    })\n  }\n  submit () {\n    let self = this\n    request.post(PATHS.tag.insertTag, {\n      tagName: self.state.newTagName,\n      count: 0\n    }).then(res => {\n      if (res) {\n        message.success('新增成功')\n        self.props.history.push('/tagList')\n      } else {\n        message.error('新增失败')\n      }\n    })\n  }\n}\n\nexport default addTag","import React from 'react'\nimport Breadcrumb from '../../../../pages/components/breadcrumb'\nimport { Layout, Comment, List } from 'antd'\nimport { request, PATHS } from '../../../../util/request'\n\nconst { Content } = Layout\nclass Borad extends React.Component {\n  state = {\n    commentList: []\n  }\n  componentDidMount () {\n    this.getCommentList().then(res => {\n      this.setState({\n        commentList: res.data\n      })\n    })\n  }\n  getCommentList () {\n    return request.get(PATHS.comment.getLeaveMessageList)\n  }\n  render () {\n    let data = this.state.commentList\n    return (\n      <Content style={{ margin: '0 24px 24px' }}>\n        <Breadcrumb pathList={['Borad', 'List']}></Breadcrumb>\n        <div style={{padding: 24, backgroundColor: '#fff'}}>\n          <List\n            className=\"comment-list\"\n            header={`${data.length} replies`}\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem = {item => (\n              <Comment\n                actions={[]}\n                author={item.name}\n                avatar={'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png'}\n                content={<p>{item.content}</p>}\n                datetime={new Date(item.created_at).toLocaleString()}\n              />\n            )}\n          />\n        </div>\n      </Content>\n    )\n  }\n}\n\nexport default Borad\n","import React from 'react'\nimport { Layout, Icon } from 'antd'\nimport { Switch, Route } from 'react-router-dom'\nimport articleList from './subpages/articleList'\nimport addArticle from './subpages/addArticle'\nimport edit from './subpages/edit'\nimport tagList from './subpages/tagList'\nimport addTag from './subpages/addTag'\nimport borad from './subpages/borad'\nimport './rightContent.scss'\n\nlet { Header, Footer } = Layout\n\nclass RightContent extends React.Component {\n\n  toggle = () => {\n    this.props.onCollapsedHandler()\n  }\n\n  render () {\n    return (\n      <Layout className=\"right-content\">\n        <Header className=\"right-content-header\">\n          <Icon\n            className=\"trigger\"\n            type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n            onClick={this.toggle}\n          ></Icon>\n        </Header>\n        {/* 路由区 */}\n        <Switch>\n          <Route exact path=\"/\" component={articleList} />\n          <Route exact path=\"/addArticle\" component={addArticle}/>\n          <Route exact path=\"/edit/:postId\" component={edit}></Route>\n          <Route exact path=\"/tagList\" component={tagList}></Route>\n          <Route exact path=\"/addTag\" component={addTag}></Route>\n          <Route exact path=\"/borad\" component={borad}></Route>\n        </Switch>\n        {/* 路由区 */}\n        <Footer style={{ textAlign: 'center' }}>\n        backMangner © 2018 - Created by React && Ant\n        </Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default RightContent","import React from 'react'\nimport { Form, Input, Icon, Checkbox, Button, message } from 'antd'\nimport { request, PATHS } from '../../util/request'\nimport { connect }  from 'react-redux'\n\nclass Login extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let username = values['username']\n        let password = values['password']\n        request.post(PATHS.user.verify,{ username, password })\n        .then(data => {\n          if (data) {\n            message.success('登录成功')\n            /**\n             * path：路径\n             * domain：域\n             * max-age：有效期长度\n             * expries：过期时间\n             * secure：httponly设置\n             */\n            // expires应使用GMT格式的时间，不设置expires页面刷新后cookie失效\n            let expiresDate = new Date('December 31, 2020').toGMTString()\n            // max-age优先级高于expires\n            document.cookie = `_ytcblog_token_=${data.data.token};expires=${expiresDate};path=/;`\n            this.props.updateStateAction(true)\n          } else {\n            message.error('登录失败')\n          }\n        })\n      }\n    })\n  }\n\n  TouristMode = e => {\n    let expiresDate = new Date(new Date().getTime() + 60 * 60 * 1000).toGMTString()\n    // max-age优先级高于expires\n    document.cookie = `_ytcblog_token_=tourist;expires=${expiresDate};path=/;`\n    this.props.updateStateAction(true)\n  }\n\n  componentDidMount () {\n    // 若用户已登录，重定向至文章列表页\n  }\n  render () {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Form onSubmit={this.handleSubmit} alt=\"战斗天使|阿丽塔\" className=\"login-form\">\n        <Form.Item>\n          {\n            getFieldDecorator('username', {\n              rules: [{require: true, message: 'Please input your username!'}]\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0, 0, 0, .25)' }}/>} placeholder=\"Username\"/>\n            )\n          }\n        </Form.Item>\n        <Form.Item>\n          {\n            getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }]\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0, 0, 0, .25)' }}/>} type=\"password\" placeholder=\"Password\"/>\n            )\n          }\n        </Form.Item>\n        <Form.Item>\n          {\n            getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true\n            })(\n              <Checkbox>Remember me</Checkbox>\n            )\n          }\n          <a className=\"login-form-forgot\" onClick={this.TouristMode.bind(this)} style={{float: 'right'}} href=\"javascript:\">游客模式！</a> {/*eslint-disable-line*/}\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginFlag: state.common.loginFlag\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateStateAction: payload => dispatch({ type: 'login', payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\nimport './App.scss'\nimport { Layout, Form } from 'antd'\nimport LeftNav from './pages/leftNav'\nimport RightContent from './pages/rightContent'\nimport Login from './pages/components/login'\nimport { Switch, Route } from 'react-router-dom'\nimport { connect }  from 'react-redux'\n\n// 导出普通函数为函数式组件，没有生命周期，没有内部状态，没有this实例\nclass App extends React.Component {\n  state = {\n    collapsed: false\n  }\n\n  // 侧边栏状态\n  onCollapsedHandler = () => {\n    this.setState({collapsed: !this.state.collapsed})\n  }\n\n  componentDidMount () {\n    let hasToken = document.cookie.match(/_ytcblog_token_=(.*)(;?)/)\n    if (hasToken) {\n      this.props.updateStateAction(true)\n    }\n  }\n\n  render () {\n    const isLogin = this.props.loginFlag\n    let WrappedNormalLoginForm\n    if (!isLogin) {\n      WrappedNormalLoginForm = Form.create({ name: 'login' })(Login)\n    }\n    return !isLogin ? \n    <div className=\"bk\" style={{overflow: 'hidden'}}>\n      <div className=\"bk-cover\"></div>\n      {/* <img className=\"bk-img\" alt=\"博客后台\" src={require('./static/sentry-pattern.png')}/> */}\n      <WrappedNormalLoginForm/>\n    </div> : (\n      <div className=\"App\">\n        <Layout style={{minHeight: '100vh'}}>\n          <Switch>\n            <Route path=\"/\" render={props => (\n              <LeftNav\n                collapsed={this.state.collapsed}\n                onCollapsedHandler={() => this.onCollapsedHandler()}\n              ></LeftNav>\n            )}/>\n          </Switch>\n          <RightContent\n            collapsed={this.state.collapsed}\n            onCollapsedHandler={() => this.onCollapsedHandler()}\n          ></RightContent>\n        </Layout>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginFlag: state.common.loginFlag\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateStateAction: payload => dispatch({ type: 'login', payload })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from '../ActionType'\n\nconst initialState = {\n  path: '/',\n  loginFlag: false\n}\n\nexport const commonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.onupdate:\n      console.log('更新成功', {\n        ...state,\n        path: action.payload\n      })\n      return {\n        ...state,\n        path: action.payload\n      }\n    case ActionTypes.onlogin:\n      console.log('登录', action.payload)\n      return {\n        ...state,\n        loginFlag: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { commonReducer } from './commonReducer'\nimport { combineReducers } from 'redux'\n\nexport default combineReducers({\n  common: commonReducer\n})","export const onupdate = 'update'\nexport const onlogin = 'login'","import { createStore } from 'redux'\nimport rootReducer from './reducer'\n\nconst store = createStore(rootReducer)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './common.scss'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <BrowserRouter>\n    {/* 注入store */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}